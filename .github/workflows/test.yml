name: Test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, ubuntu-20.04, windows-2022, windows-2019, macos-12, macos-11 ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3

      # default
      - name: ls
        id: ls
        uses: ./
      - run: test "${json}" = '["LICENSE","README.md","action.yml"]'
        env:
          json: ${{ steps.ls.outputs.json }}
        if: ${{ runner.os != 'Windows' }}
      - run: test $Env:json = '["LICENSE","README.md","action.yml"]'
        env:
          json: ${{ steps.ls.outputs.json }}
        if: ${{ runner.os == 'Windows' }}

      # path
      - name: ls .github
        id: ls-path
        uses: ./
        with:
          path: .github
      - run: test "${json}" = '["CODEOWNERS","dependabot.yml","workflows"]'
        env:
          json: ${{ steps.ls-path.outputs.json }}
        if: ${{ runner.os != 'Windows' }}
      - run: test $Env:json = '["CODEOWNERS","dependabot.yml","workflows"]'
        env:
          json: ${{ steps.ls-path.outputs.json }}
        if: ${{ runner.os == 'Windows' }}

      # dotfiles
      - name: ls -A
        id: ls-A
        uses: ./
        with:
          dotfiles: true
      - run: test "${json}" = '[".github","LICENSE","README.md","action.yml"]'
        env:
          json: ${{ steps.ls-A.outputs.json }}
        if: ${{ runner.os != 'Windows' }}
      - run: test $Env:json = '[".github","LICENSE","README.md","action.yml"]'
        env:
          json: ${{ steps.ls-A.outputs.json }}
        if: ${{ runner.os == 'Windows' }}

  test-passing:
    needs: [ test ]
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - run: echo 'All tests have passed.'
